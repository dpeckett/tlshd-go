diff -u a/common.go b/common.go
--- a/common.go	2024-03-01 16:57:28.455920521 +0100
+++ b/common.go	2024-03-01 16:50:19.635930069 +0100
@@ -298,6 +298,9 @@
 
 	// ekm is a closure exposed via ExportKeyingMaterial.
 	ekm func(label string, context []byte, length int) ([]byte, error)
+
+	// keyInfo is a closure exposed via KeyInfo.
+	keyInfo func(in bool) (key []byte, iv []byte, seq []byte)
 }
 
 // ExportKeyingMaterial returns length bytes of exported key material in a new
@@ -314,6 +317,13 @@
 	return cs.ekm(label, context, length)
 }
 
+// KeyInfo returns the key, IV, and sequence number for the connection. If in
+// is true, the key and IV are for the incoming direction, otherwise they are
+// for the outgoing direction.
+func (cs *ConnectionState) KeyInfo(in bool) (key []byte, iv []byte, seq []byte) {
+	return cs.keyInfo(in)
+}
+
 // ClientAuthType declares the policy the server will follow for
 // TLS Client Authentication.
 type ClientAuthType int
diff -u a/conn.go b/conn.go
--- a/conn.go	2024-03-01 16:57:28.455920521 +0100
+++ b/conn.go	2024-03-01 16:50:19.635930069 +0100
@@ -172,6 +172,8 @@
 	cipher  any    // cipher algorithm
 	mac     hash.Hash
 	seq     [8]byte // 64-bit sequence number
+	key     []byte  // encrypt or decrypt key
+	iv      []byte  // encrypt or decrypt iv
 
 	scratchBuf [13]byte // to avoid allocs; interface method args escape
 
@@ -227,8 +229,8 @@
 func (hc *halfConn) setTrafficSecret(suite *cipherSuiteTLS13, level QUICEncryptionLevel, secret []byte) {
 	hc.trafficSecret = secret
 	hc.level = level
-	key, iv := suite.trafficKey(secret)
-	hc.cipher = suite.aead(key, iv)
+	hc.key, hc.iv = suite.trafficKey(secret)
+	hc.cipher = suite.aead(hc.key, hc.iv)
 	for i := range hc.seq {
 		hc.seq[i] = 0
 	}
@@ -1628,6 +1630,21 @@
 	} else {
 		state.ekm = c.ekm
 	}
+
+	state.keyInfo = func(in bool) ([]byte, []byte, []byte) {
+		if in {
+			c.in.Lock()
+			defer c.in.Unlock()
+
+			return c.in.key, c.in.iv, c.in.seq[:]
+		} else {
+			c.out.Lock()
+			defer c.out.Unlock()
+
+			return c.out.key, c.out.iv, c.out.seq[:]
+		}
+	}
+
 	return state
 }
 
diff -u a/handshake_client.go b/handshake_client.go
--- a/handshake_client.go	2024-03-01 16:57:28.455920521 +0100
+++ b/handshake_client.go	2024-03-01 16:56:33.183921751 +0100
@@ -733,6 +733,12 @@
 
 	c.in.prepareCipherSpec(c.vers, serverCipher, serverHash)
 	c.out.prepareCipherSpec(c.vers, clientCipher, clientHash)
+
+	c.in.key = serverKey
+	c.in.iv = serverIV
+	c.out.key = clientKey
+	c.out.iv = clientIV
+
 	return nil
 }
 
diff -u a/handshake_server.go b/handshake_server.go
--- a/handshake_server.go	2024-03-01 16:57:28.455920521 +0100
+++ b/handshake_server.go	2024-03-01 16:58:57.175918545 +0100
@@ -756,6 +756,11 @@
 	c.in.prepareCipherSpec(c.vers, clientCipher, clientHash)
 	c.out.prepareCipherSpec(c.vers, serverCipher, serverHash)
 
+	c.in.key = clientKey
+	c.in.iv = clientIV
+	c.out.key = serverKey
+	c.out.iv = serverIV
+
 	return nil
 }
 
Common subdirectories: tls/patches and b/patches
Common subdirectories: tls/testdata and b/testdata
